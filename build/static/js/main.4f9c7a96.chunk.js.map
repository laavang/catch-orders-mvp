{"version":3,"sources":["logo.svg","components/Navigation.js","components/AddLicense.js","redux/actions.js","containers/AddLicense.js","components/Sidebar.js","containers/Sidebar.js","components/UpdateLicense.js","components/Licenses.js","containers/Licenses.js","components/LicensesClosed.js","containers/LicensesClosed.js","components/Dashboard.js","containers/Dashboard.js","Router.js","redux/reducers.js","redux/store.js","redux/state.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","AppBar","position","className","Toolbar","src","logo","Typography","variant","style","flexGrow","onClick","console","log","document","cookie","window","location","replace","AddLicense","state","open","flaghousePO","buyer","site","license","licenseStart","licenseEnd","toggleDialog","setState","handleTextChange","e","newState","target","id","value","handleSubmit","preventDefault","payload","props","addLicense","reload","componentDidUpdate","prevProps","prevState","Button","this","Dialog","onClose","DialogTitle","DialogContent","onSubmit","TextField","placeholder","onChange","required","color","type","Component","fetchLicensesBegin","fetchLicenses","dispatch","fetch","then","res","json","response","licenses","i","length","startDateTime","endDateTime","startMonth","slice","startDay","startYear","endMonth","endDay","endYear","fetchLicensesSuccess","catch","processLicenseBegin","connect","licenseStartMonth","licenseStartDay","licenseStartYear","licenseEndMonth","licenseEndDay","licenseEndYear","newLicense","method","headers","body","JSON","stringify","Sidebar","focus","backgroundColor","filterLicenses","licenseFilter","UpdateLicense","license_id","isClosed","isDeleted","updateLicense","triggerLicenseUpdate","Licenses","useState","updateCount","addUpdate","useEffect","loading","error","items","openLicenses","filter","class","scope","map","index","textAlign","deleteLicense","processLicense","user","licenseId","deletedLicense","licenseData","updatedLicense","url","licenseToProcess","process","processLicenseSuccess","LicensesClosed","closedLicenses","idx","Dashboard","Container","maxWidth","textTransform","sx","Router","path","component","combineReducers","username","password","isLoggedIn","action","newUser","emptyUser","createStore","reducers","email","applyMiddleware","thunk","App","store","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f9c7a96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a6029168.svg\";","import React from 'react'\nimport {\n    AppBar, Toolbar,\n    Typography\n} from '@material-ui/core'\nimport logo from '../logo.svg';\n\nconst Navigation = () => {\n    return (\n        <AppBar position=\"relative\" className=\"app-bar\">\n            <Toolbar>\n                <div className=\"logo\">\n                    <img src={logo} />\n                </div>\n                <Typography variant=\"h6\" style={{ flexGrow: \"1\" }} className=\"toolbar-header\">\n                    Orders\n                </Typography>\n                <ul className=\"nav-list\">\n                <li className=\"nav-list-item\"\n                        onClick={() => {\n                            console.log(\"User logged out\")\n                            document.cookie = \"loggedIn=\"\n                            window.location.replace(\"/login\")\n                        }}>\n                        Logout\n                    </li>\n                </ul>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navigation","import React, { Component, Fragment } from 'react'\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    Select, \n    MenuItem, \n    InputLabel, \n    Input\n} from '@material-ui/core'\n\nconst thinkificBundles = [\n    {\n        \"id\": 550225,\n        \"name\": \"[Item #01] CATCH Early Childhood Coordination Kit\"\n    },\n    {\n        \"id\": 550228,\n        \"name\": \"[Item #02] CATCH Early Childhood Curriculum & Teacher's Manual\"\n    },\n    {\n        \"id\": 550229,\n        \"name\": \"[Item #03] CATCH.org Early Childhood Activity Pack\"\n    },\n    {\n        \"id\": 550230,\n        \"name\": \"[Item #04] CATCH Coordination Kit (K-5) 6-Week & 9-Week\"\n    },\n    {\n        \"id\": 550232,\n        \"name\": \"[Item #05] CATCH Coordination Kit (K-5) 6-Week\"\n    },\n    {\n        \"id\": 550233,\n        \"name\": \"[Item #06] CATCH Coordination Kit (K-5) 9-Week\"\n    },\n    {\n        \"id\": 550234,\n        \"name\": \"[Item #07] CATCH K-5 Curriculum Bundle\"\n    },\n    {\n        \"id\": 550235,\n        \"name\": \"[Item #08] CATCH PE Guidebook & K-5 Physical Activity Pack\"\n    },\n    {\n        \"id\": 963044,\n        \"name\": \"[Item #09] CATCH Coordination Kit (6-8)\"\n    },\n    {\n        \"id\": 963045,\n        \"name\": \"[Item #10] CATCH 6-8 Curriculum Bundle\"\n    },\n    {\n        \"id\": 963046,\n        \"name\": \"[Item #11] CATCH 6-8 PE Guidebook & Physical Activity Pack\"\n    },\n    {\n        \"id\": 963047,\n        \"name\": \"[Item #12] CATCH My Breath E-Cigarette & JUUL Prevention\"\n    },\n    {\n        \"id\": 963049,\n        \"name\": \"[Item #13] CATCH Kids Club After School Curriculum Grades K-5\"\n    },\n    {\n        \"id\": 963050,\n        \"name\": \"[Item #14] CATCH Kids Club After School Curriculum Grades 5-8\"\n    },\n    {\n        \"id\": 963051,\n        \"name\": \"[Item #15] CATCH Kids Club K-5 Physical Activity Pack\"\n    },\n    {\n        \"id\": 963053,\n        \"name\": \"[Item #16] CATCH Kids Club 5-8 Physical Activity Pack\"\n    }\n]\n\nclass AddLicense extends Component {\n    state = {\n        open: false,\n        flaghousePO: '',\n        buyer: '',\n        site: '',\n        license: '',\n        licenseStart: '',\n        licenseEnd: ''\n    }\n\n    toggleDialog = () => this.setState({ open: !this.state.open })\n\n    handleTextChange = (e) => {\n        const newState = { ...this.state }\n        newState[e.target.id] = e.target.value\n        this.setState(newState)\n    }\n\n    // async const createLicense = (payload) {\n    //     const response = await fetch(url, {\n    //       method: 'POST', \n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify(payload) \n    //     });\n    //     return response.json(); \n    //   }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const payload = { ...this.state }\n        delete payload.open\n        this.props.addLicense(payload)\n        this.setState({\n            flaghousePO: '',\n            buyer: '',\n            site: '',\n            license: '',\n            licenseStart: '',\n            licenseEnd: ''\n        })\n        this.setState({ open: !this.state.open })\n        window.location.reload()\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevState.open !== this.state.open) {\n            this.setState({\n                flaghousePO: '',\n                buyer: '',\n                site: '',\n                license: '',\n                licenseStart: '',\n                licenseEnd: ''\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <Button\n                    variant=\"contained\"\n                    className=\"add-license\"\n                    onClick={this.toggleDialog}\n                >\n                    Add License\n                    </Button>\n                <div>\n                    <Dialog open={this.state.open} onClose={this.toggleDialog} >\n                        <DialogTitle>Add License</DialogTitle>\n                        <DialogContent>\n                            <form\n                                onSubmit={this.handleSubmit}\n                                className=\"add-license-form\">\n                                <TextField\n                                    id=\"flaghousePO\"\n                                    placeholder=\"Flaghouse PO\"\n                                    value={this.state.flaghousePO}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"buyer\"\n                                    placeholder=\"Buyer\"\n                                    value={this.state.buyer}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"site\"\n                                    placeholder=\"Site\"\n                                    value={this.state.site}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"license\"\n                                    placeholder=\"License\"\n                                    value={this.state.license}\n                                    onChange={this.handleTextChange}\n                                    required />\n\n        {/* <Select\n          labelId=\"license-label\"\n          id=\"license\"\n          value={this.state.license}\n          onChange={this.handleTextChange}\n          input={<Input />}\n        //   MenuProps={MenuProps}\n        >\n          {thinkificBundles.map((thinkificLicense, index) => (\n            <MenuItem key={thinkificLicense} value={thinkificLicense}>\n              {thinkificLicense.name}\n            </MenuItem>\n          ))}\n        </Select> */}\n                                <TextField\n                                    id=\"licenseStart\"\n                                    placeholder=\"Start Date (MM-DD-YYYY)\"\n                                    value={this.state.licenseStart}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"licenseEnd\"\n                                    placeholder=\"Expiration Date (MM-DD-YYYY)\"\n                                    value={this.state.licenseEnd}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n                            </form>\n                        </DialogContent>\n                    </Dialog>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default AddLicense","\n// export const addLicense = (license) => {\n//     return {\n//         type: 'ADD_LICENSE',\n//         value: license\n//     }\n// }\n\n// export const removeLicense = (id) => {\n//     return {\n//         type: 'REMOVE_LICENSE',\n//         value: id\n//     }\n// }\n\nexport const filterLicenses = (licenseFilter) => {\n    return {\n        type: 'FILTER_LICENSES',\n        value: licenseFilter\n    }\n}\n\n\nconst FETCH_LICENSES_BEGIN = 'FETCH_LICENSES_BEGIN'\nconst FETCH_LICENSES_SUCCESS = 'FETCH_LICENSES_SUCCESS'\nconst FETCH_LICENSES_FAILURE = 'FETCH_LICENSES_FAILURE'\n\nexport const fetchLicensesBegin = () => {\n    return {\n        type: FETCH_LICENSES_BEGIN\n    }\n}\n\nexport const fetchLicensesSuccess = (licenses) => {\n    return {\n        type: FETCH_LICENSES_SUCCESS,\n        value: licenses\n    }\n}\n\nexport const fetchLicensesFailure = (error) => {\n    return {\n        type: FETCH_LICENSES_FAILURE,\n        value: error\n    }\n}\n\n\nexport const fetchLicenses = () => {\n    return (dispatch) => {\n        dispatch(fetchLicensesBegin)\n        fetch('http://localhost:4000/licenses')\n            .then(res => res.json())\n            .then(response => {\n                const licenses = response;\n\n                for (let i = 0; i < licenses.length; i++) {\n                    let startDateTime = licenses[i].licenseStart;\n                    let endDateTime = licenses[i].licenseEnd;\n\n                    let startMonth = startDateTime.slice(5, 7);\n                    let startDay = startDateTime.slice(8, 10);\n                    let startYear = startDateTime.slice(0, 4);\n                    let licenseStart = `${startMonth}-${startDay}-${startYear}`;\n\n                    let endMonth = endDateTime.slice(5, 7);\n                    let endDay = endDateTime.slice(8, 10);\n                    let endYear = endDateTime.slice(0, 4);\n                    let licenseEnd = `${endMonth}-${endDay}-${endYear}`;\n\n                    licenses[i].licenseStart = licenseStart;\n                    licenses[i].licenseEnd = licenseEnd;\n                }\n\n                dispatch(fetchLicensesSuccess(licenses))\n                \n            }).catch(e => {\n                dispatch(fetchLicensesFailure(e))\n                console.log('error ===> ', e);\n            });\n    }\n}\n\n\n\nconst PROCESS_LICENSE_BEGIN = 'PROCESS_LICENSE_BEGIN'\nconst PROCESS_LICENSE_SUCCESS = 'PROCESS_LICENSE_SUCCESS'\nconst PROCESS_LICENSE_FAILURE = 'PROCESS_LICENSE_FAILURE'\n\nexport const processLicenseBegin = () => {\n    return {\n        type: PROCESS_LICENSE_BEGIN\n    }\n}\n\nexport const processLicenseSuccess = (license) => {\n    return {\n        type: PROCESS_LICENSE_SUCCESS,\n        value: license\n    }\n}\n\nexport const processLicenseFailure = (error) => {\n    return {\n        type: PROCESS_LICENSE_FAILURE,\n        value: error\n    }\n}\n\n\nexport const processLicense = (license) => {\n    return (dispatch) => {\n        console.log(\"License processing initiating...\");\n        dispatch(processLicenseBegin)\n\n        const licenseToProcess = {\n            'flaghousePO': license.flaghousePO,\n            'buyer': license.buyer,\n            'site': license.site,\n            'license': license.license,\n            'licenseStart': license.licenseStart,\n            'licenseEnd': license.licenseEnd,\n            'isClosed': 0,\n            'isDeleted': 0,\n            'licenseId': license.licenseId\n        };\n\n        console.log(license);\n        console.log(\"License to process \", licenseToProcess);\n\n        fetch(`${process.env.REACT_APP_BACKEND_URI}/licenses/process`,\n            {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(licenseToProcess)\n            })\n            .then(dispatch(processLicenseSuccess(license)))\n            .catch(e => {\n                console.log('License processing error ===> ', e);\n            });\n}}\n\n\n\nexport const addLicense = (license) => {\n\n    console.log(\"ADD LICENSE: \", license)\n\n    return (dispatch) => {\n\n        let licenseStartMonth = license.licenseStart.slice(0, 2);\n        let licenseStartDay = license.licenseStart.slice(3, 5);\n        let licenseStartYear = license.licenseStart.slice(6, 10);\n\n        let licenseEndMonth = license.licenseEnd.slice(0, 2);\n        let licenseEndDay = license.licenseEnd.slice(3, 5);\n        let licenseEndYear = license.licenseEnd.slice(6, 10);\n\n        let licenseStart = `${licenseStartYear}-${licenseStartMonth}-${licenseStartDay} 00:00:00`\n        let licenseEnd = `${licenseEndYear}-${licenseEndMonth}-${licenseEndDay} 00:00:00`\n\n        const newLicense = {\n            'flaghousePO': license.flaghousePO,\n            'buyer': license.buyer,\n            'site': license.site,\n            'license': license.license,\n            'licenseStart': licenseStart,\n            'licenseEnd': licenseEnd,\n            'isClosed': 0,\n            'isDeleted': 0\n        };\n\n        fetch('http://localhost:4000/licenses/add',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newLicense)\n            })\n            .then(res => res.json())\n            .then(response => {\n                // const action = {\n                //     type: 'CREATE_LICENSE',\n                //     value: response\n                // }\n                // dispatch(action)\n                console.log(response)\n            })\n            .catch(e => {\n                console.log('error ===> ', e);\n            });\n        // window.location.reload();\n    }\n}\n\n\n\nexport const updateLicense = (license) => {\n    return (dispatch) => {\n\n        let licenseStartMonth = license.licenseStart.slice(0, 2);\n        let licenseStartDay = license.licenseStart.slice(3, 5);\n        let licenseStartYear = license.licenseStart.slice(6, 10);\n\n        let licenseEndMonth = license.licenseEnd.slice(0, 2);\n        let licenseEndDay = license.licenseEnd.slice(3, 5);\n        let licenseEndYear = license.licenseEnd.slice(6, 10);\n\n        let licenseStart = `${licenseStartYear}-${licenseStartMonth}-${licenseStartDay} 00:00:00`\n        let licenseEnd = `${licenseEndYear}-${licenseEndMonth}-${licenseEndDay} 00:00:00`\n\n        const updatedLicense = {\n            'licenseId': license.licenseId,\n            'flaghousePO': license.flaghousePO,\n            'buyer': license.buyer,\n            'site': license.site,\n            'license': license.license,\n            'licenseStart': license.licenseStart,\n            'licenseEnd': license.licenseEnd,\n            'isClosed': license.isClosed,\n            'isDeleted': 0\n        };\n        const url = \"http://localhost:4000/licenses/\" + license.licenseId;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(updatedLicense)\n        })\n            .catch(e => {\n                console.log('error ===> ', e);\n            });\n        window.location.reload();\n        //eventually replace this\n    }\n}\n\n\nexport const deleteLicense = (license) => {\n    return (dispatch) => {\n        const id = license.licenseId;\n        const deletedLicense = {\n            'licenseId': license.licenseId,\n            'flaghousePO': license.flaghousePO,\n            'buyer': license.buyer,\n            'site': license.site,\n            'license': license.license,\n            'licenseStart': '2020-01-10 14:45:12',\n            'licenseEnd': '2022-01-10 14:45:12',\n            'isClosed': license.isClosed,\n            'isDeleted': 1\n        };\n        const url = \"http://localhost:4000/licenses/delete/\" + id;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(deletedLicense)\n        })\n            // .then(res => {\n            //     res.json()\n            // })\n            // })\n            .catch(e => {\n                console.log('error ===> ', e);\n            });\n        // window.location.reload();\n        //eventually replace this\n    }\n}\n\n\n\nexport const logIn = (user) => {\n    return {\n        type: 'LOG_IN',\n        value: user\n    }\n}\n\nexport const logOut = () => {\n    return {\n        type: 'LOG_OUT',\n        value: \"\"\n    }\n}\n\n\n\n\n","import { connect } from 'react-redux'\nimport AddLicense from '../components/AddLicense'\nimport { addLicense } from '../redux/actions'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addLicense: (license) => dispatch(addLicense(license))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddLicense)\n","import React from 'react'\n\n\nconst Sidebar = (props) => {\n\n  let focus = \"red !important\";\n\n    return (\n<div className=\"sidebar sidebar-md-show\">\n  <nav className=\"sidebar-nav\">\n    <ul className=\"nav\">\n      <li className=\"nav-title\">Orders</li>\n      <li className=\"nav-item\" style={{backgroundColor:{focus}}}>\n        <a id=\"open-orders\" className=\"nav-link\" onClick={() => \n          props.filterLicenses(\"open\")}>\n          Open Orders\n        </a>\n      </li>\n      <li className=\"nav-item nav-dropdown\" style={{backgroundColor:{focus}}}>\n        <a id=\"closed-orders\" className=\"nav-link\" onClick={() =>\n          props.filterLicenses(\"closed\")\n          }>\n            Closed Orders\n        </a>\n      </li>\n    </ul>\n  </nav>\n  <button className=\"sidebar-minimizer brand-minimizer\" type=\"button\"></button>\n</div>\n    )\n}\n\nexport default Sidebar","import { connect } from 'react-redux'\nimport Sidebar from '../components/Sidebar'\nimport { filterLicenses } from '../redux/actions'\n\n    const mapStateToProps = (state) => {\n        return {\n            licenseFilter: state.licenseFilter\n        }\n    }\n\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            filterLicenses: (licenseFilter) => dispatch(filterLicenses(licenseFilter))\n        }\n    }\n\n    export default connect(mapStateToProps, mapDispatchToProps)(Sidebar)","import React, { Component, Fragment } from 'react'\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogContent,\n    DialogTitle\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nclass UpdateLicense extends Component {\n\n    \n    state = {\n        open: false,\n        license_id: this.props.license.license_id,\n        flaghousePO: this.props.license.flaghousePO,\n        buyer: this.props.license.buyer,\n        site: this.props.license.site,\n        license: this.props.license.license,\n        // licenseStart: this.props.license.licenseStart,\n        // licenseEnd: this.props.license.licenseEnd,\n        licenseStart: '2020-01-10 14:45:12',\n        licenseEnd: '2022-01-10 14:45:12',\n        isClosed: this.props.license.isClosed,\n        isDeleted: this.props.license.isDeleted\n    }\n\n\n    toggleDialog = () => this.setState({ open: !this.state.open })\n\n    handleTextChange = (e) => {\n        const newState = { ...this.state }\n        newState[e.target.id] = e.target.value\n        this.setState(newState)\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const payload = { ...this.state }\n        delete payload.open\n        this.props.updateLicense(payload)\n        this.toggleDialog()\n        this.props.fetchLicenses()\n        this.props.triggerLicenseUpdate()\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <EditIcon\n                    className=\"icon\" onClick={this.toggleDialog}/>\n                <div>\n                    <Dialog open={this.state.open} onClose={this.toggleDialog} >\n                        <DialogTitle>Update License</DialogTitle>\n                        <DialogContent>\n                            <form\n                                onSubmit={this.handleSubmit}\n                                className=\"update-license-form\">\n                                <TextField\n                                    id=\"flaghousePO\"\n                                    placeholder=\"Flaghouse PO\"\n                                    value={this.state.flaghousePO}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"buyer\"\n                                    placeholder=\"Buyer\"\n                                    value={this.state.buyer}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"site\"\n                                    placeholder=\"Site\"\n                                    value={this.state.site}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"license\"\n                                    placeholder=\"License\"\n                                    value={this.state.license}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"licenseStart\"\n                                    placeholder=\"Start Date (MM-DD-YYYY)\"\n                                    // value={`${this.state.licenseStart.slice(5,7)}-${this.state.licenseStart.slice(8,10)}-${this.state.licenseStart.slice(0,4)}`}\n                                    value={this.state.licenseStart}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <TextField\n                                    id=\"licenseEnd\"\n                                    placeholder=\"Expiration Date (MM-DD-YYYY)\"\n                                    // value={`${this.state.licenseStart.slice(5,7)}-${this.state.licenseStart.slice(8,10)}-${this.state.licenseStart.slice(0,4)}`}\n                                    value={this.state.licenseStart}\n                                    onChange={this.handleTextChange}\n                                    required />\n                                <br />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Update License</Button>\n                            </form>\n                        </DialogContent>\n                    </Dialog>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default UpdateLicense","import React, { useState, useEffect } from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport UpdateLicense from './UpdateLicense'\n\n\nconst Licenses = (props) => {\n\n    const [updateCount, addUpdate] = useState(0);\n\n    const triggerLicenseUpdate = () => {\n\n        addUpdate(updateCount + 1)\n    }\n\n    useEffect(() => {\n        props.fetchLicenses();\n    }, [updateCount]);\n\n\n    const deleteLicense = (license) => {\n        props.deleteLicense(license)\n        triggerLicenseUpdate();\n    }\n\n    const processLicense = (license) => {\n        props.processLicense(license)\n        triggerLicenseUpdate();\n    }\n\n\n    if (props.licenses.loading == true) {\n        console.log(\"Loading licenses...\")\n        return (\n            <div>\n                <p>Loading...</p>\n            </div>\n        )\n    }\n\n    else if (props.licenses.error !== null || props.licenses.items.length === 0) {\n        console.log(\"No licenses found.\")\n        return (\n            <div>\n                <p>No licenses found.</p>\n            </div>\n        )\n    }\n\n    else {\n\n        let undeletedLicenses = props.licenses.items.filter(license => license.isDeleted === 0);\n        let openLicenses = undeletedLicenses.filter(license => license.isClosed === 0);\n\n        console.log(\"Fetched licenses: \", openLicenses);\n\n        return (\n            <table class=\"table table-striped table-bordered open-licenses-table\">\n                <thead>\n                    <tr>\n                        {/* <th scope=\"col\">Flaghouse PO</th> */}\n                        <th scope=\"col\">Buyer</th>\n                        <th scope=\"col\">Site</th>\n                        <th scope=\"col\">License</th>\n                        <th scope=\"col\">Start Date</th>\n                        <th scope=\"col\">End Date</th>\n                        <th scope=\"col\">Edit</th>\n                        <th scope=\"col\">Delete</th>\n                        <th scope=\"col\">Process</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {openLicenses.map((license, index) => (\n                        <tr key={license.license_id}>\n                            {/* <th scope=\"col\">{license.flaghousePO}</th> */}\n                            <th scope=\"col\">{license.buyer}</th>\n                            <th scope=\"col\">{license.site}</th>\n                            <th scope=\"col\">{license.license}</th>\n                            <th scope=\"col\">{license.licenseStart.slice(0, 8)}</th>\n                            <th scope=\"col\">{license.licenseEnd.slice(0, 8)}</th>\n                            <th scope=\"col\" style={{ textAlign: \"center\" }}>\n                                <UpdateLicense license={license} index={index} updateLicense={props.updateLicense} fetchLicenses={props.fetchLicenses} triggerLicenseUpdate={triggerLicenseUpdate} />\n                            </th>\n                            <th scope=\"col\" style={{ textAlign: \"center\" }}>\n                                <DeleteIcon\n                                    onClick={() => deleteLicense(license)}\n                                    className=\"icon text-red\" />\n                            </th>\n                            <th scope=\"col\" style={{ textAlign: \"center\" }}>\n                                <CachedIcon\n                                    onClick={() => processLicense(license)}\n                                className=\"icon process-icon\" />\n                            </th>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default Licenses","import { connect } from 'react-redux'\nimport Licenses from '../components/Licenses'\nimport { deleteLicense, fetchLicenses, updateLicense, processLicense } from '../redux/actions'\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        licenses: state.licenses\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchLicenses: () => dispatch(fetchLicenses()), \n        deleteLicense: (license) => dispatch(deleteLicense(license)), \n        updateLicense: (licenseData) => dispatch(updateLicense(licenseData)),\n        processLicense: (license) => dispatch(processLicense(license))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Licenses)\n","import React, { useState, useEffect } from 'react'\n\nconst LicensesClosed = (props) => {\n\n        const [licenses, setLicenses] = useState([]);\n\n        useEffect(() => {\n            props.fetchLicenses();\n        }, []);\n\n        if (props.licenses.loading === true) {\n            console.log(\"Loading licenses...\")\n            return (\n            <div>\n                <p>Loading...</p>\n            </div>\n            )\n        }\n    \n        else if (props.licenses.error !== null || props.licenses.items.length === 0) {\n            console.log(\"No licenses found.\")\n            return (\n            <div>\n               <p>No licenses found.</p>\n            </div>\n            )\n        }\n    \n        else {\n\n            console.log('Licenses found: ', props.licenses)\n\n            let undeletedLicenses = props.licenses.items.filter(license => license.isDeleted === 0);\n            let closedLicenses = undeletedLicenses.filter(license => license.isClosed === 1);\n\n            return (\n                <table class=\"table table-striped table-bordered closed-license-table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Flaghouse PO</th>\n                            <th scope=\"col\">Buyer</th>\n                            <th scope=\"col\">Site</th>\n                            <th scope=\"col\">License</th>\n                            <th scope=\"col\">Start Date</th>\n                            <th scope=\"col\">End Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {closedLicenses.map((license, idx) => (\n                            <tr key={license.id}>\n                                <th scope=\"col\">{license.flaghousePO}</th>\n                                <th scope=\"col\">{license.buyer}</th>\n                                <th scope=\"col\">{license.site}</th>\n                                <th scope=\"col\">{license.license}</th>\n                                <th scope=\"col\">{license.licenseStart}</th>\n                                <th scope=\"col\">{license.licenseEnd}</th>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )\n        }\n    }\n\n        export default LicensesClosed","import { connect } from 'react-redux'\nimport LicensesClosed from '../components/LicensesClosed'\nimport {fetchLicenses} from '../redux/actions'\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        licenses: state.licenses\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchLicenses: () => dispatch(fetchLicenses())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LicensesClosed)","import React from 'react'\nimport {\n    Container\n} from '@material-ui/core'\nimport AddLicense from '../containers/AddLicense'\nimport Sidebar from '../containers/Sidebar'\nimport Licenses from '../containers/Licenses'\nimport LicensesClosed from '../containers/LicensesClosed'\n\nconst Dashboard = (props) => {\n\n    return (\n        <div className=\"dashboard\">\n            <Sidebar />\n            <Container maxWidth=\"lg\" className=\"license-container\">\n\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <div class=\"row\">\n                            <div class=\"d-flex align-items-center col-6 col-sm-6 col-md-6 col-lg-6\" style={{textTransform: \"capitalize\"}}>\n                                <strong><i class=\"icon-info pr-1\"></i>{props.licenses.filter} Orders</strong>\n                            </div>\n                            {props.licenses.filter === \"open\" ?\n                            <div sx=\"6\" class=\"d-flex justify-content-end col-sm-6 col-md-6 col-lg-6\">\n                                <AddLicense className=\"add-license-button\" />\n                            </div>\n                            :\n                            <div></div>\n                            }\n                        </div>\n                    </div>\n                    <div class=\"card-body\">\n                        {props.licenses.filter === \"open\" ?\n                            <Licenses />\n                            :\n                            <LicensesClosed />\n                        }\n                    </div>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Dashboard","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n// import { deleteLicense } from '../redux/actions'\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        licenses: state.licenses\n    }\n}\n\n// add mapDispatchToProps function here\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // removeLicense: (index) => dispatch(removeLicense(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router'\nimport Dashboard from './containers/Dashboard'\nimport Login from './containers/Login'\nimport cookie from 'cookie'\n\nconst checkAuth = () => {\n    const cookies = cookie.parse(document.cookie)\n    return cookies[\"isLoggedIn\"] ? true : false\n}\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route\n        {...rest}\n        render={(props) => checkAuth()\n            ? <Component {...props} />\n            : <Redirect to=\"/login\" />}\n        />\n    )\n}\n\nconst Router = () => {\n    return (\n            <Switch>\n                {/* <Route path=\"/login\" component={Login} /> */}\n                {/* <ProtectedRoute path=\"/\" component={Dashboard} /> */}\n                <Route path=\"/\" component={Dashboard} />\n            </Switch>\n    )\n}\n\nexport default Router","import { combineReducers } from 'redux'\n\nconst licenses = (state = { items: [], loading: false, error: null, filter: \"open\" }, action) => {\n    switch (action.type) {\n        case 'ADD_LICENSE':\n            return {\n                ...state,\n                items: [...state.licenses.items, action.value],\n            }\n        case 'DELETE_LICENSE':\n            // const licenses = [ ...state ]\n            // licenses.splice(action.value, 1)\n            // return licenses\n            return state\n       case 'FETCH_LICENSES_BEGIN':\n            return {\n                ...state,\n                items: [...state.licenses.items],\n                loading: true,\n                error: null,\n            }\n        case 'FETCH_LICENSES_SUCCESS':\n            return {\n                ...state,\n                items: action.value,\n                loading: false,\n                error: null,\n            }\n        case 'PROCESS_LICENSE_BEGIN':\n             return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case 'PROCESS_LICENSE_SUCCESS':\n            return {\n                 ...state,\n                loading: false,\n                error: null\n              }\n        case 'FILTER_LICENSES':\n            return {\n                ...state, \n                filter: action.value\n            }\n        case 'FILTER_LICENSES':\n            return {\n                ...state, \n                filter: action.value\n            }\n        // case 'FETCH_LICENSES_FAILURE':\n        //     return {\n        //         items: [],\n        //         loading: false,\n        //         error: action.value\n        //     }\n        case 'UPDATE_LICENSE':\n            // console.log(action.value);\n            // const licenseArray = [ ...state ]\n            // const updatedLicenseIndex = action.value[0]\n            // const updatedLicense = action.value[1]\n            // licenseArray.splice(updatedLicenseIndex, 1)\n            // licenseArray.splice(updatedLicenseIndex, 0, updatedLicense)\n            return state\n        default:\n            return state\n    }\n}\n\nconst user = (state = { username: null, password: null, isLoggedIn: false }, action) => {\n    switch (action.type) {\n        case 'LOG_IN':\n            const newUser = action.value;\n            console.log(\"New user: \", newUser);\n            return newUser;\n        case 'LOG_OUT':\n            const emptyUser = { username: null, password: null, isLoggedIn: false };\n            document.cookie = 'isLoggedIn=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n            return emptyUser;\n        default:\n            return state\n    }\n}\n\n\n\nexport default combineReducers({ user, licenses })","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\nimport state from './state'\n\nexport default createStore(reducers, state, applyMiddleware(thunk))","export default {\n    user: {\n        username: 'test-user-1',\n        email: 'test-user@example.com'\n    },\n    licenses: {\n        items: [],\n        loading: false,\n        error: false, \n        filter: \"open\"\n    }\n  };\n  ","import React from 'react';\nimport Navigation from './components/Navigation'\nimport './App.css'\nimport Router from './Router'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Navigation />\n        <Router />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}